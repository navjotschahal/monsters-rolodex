{"version":3,"sources":["logo.svg","components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","id","src","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","seachField","target","value","state","fetch","then","response","json","users","console","log","length","this","filteredMonsters","filter","toLowerCase","includes","logo","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAAe,MAA0B,iC,2BCG5BA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,kBAAaF,EAAMG,QAAQC,IAAMC,IAAG,+BAA0BL,EAAMG,QAAQC,GAAxC,4BAC5C,6BAEQJ,EAAMG,QAAQG,OAGtB,6BAEQN,EAAMG,QAAQI,YCVrBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KACX,SAACP,GACC,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPnCO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBAAOC,KAAK,SAASF,YAAaA,EAC9BG,SAAUF,EAAcZ,UAAU,aCsD/Be,E,kDArDb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,SAlBpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,WAAY,IALF,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACCC,QAAQC,IAAIF,GACZ,EAAKT,SAAS,CAACT,SAAUkB,GAASA,EAAMG,OAASH,EAAQ,U,oBAS/D,WAAU,IAAD,EAC0BI,KAAKT,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,WACZa,EAAmBvB,EAASwB,QAAO,SAAC9B,GACxC,OAAOA,EAAQG,KAAK4B,cAAcC,SAAShB,EAAWe,kBAGxD,OACE,sBAAKjC,UAAU,MAAf,UAEE,qDAEA,qBAAKI,IAAK+B,EAAMlC,IAAI,aAAaD,UAAU,aAE3C,uBAEA,cAAC,EAAD,CAAWW,YAAY,mBAAmBC,aAAckB,KAAKlB,eAG7D,uBACA,uBAEA,cAAC,EAAD,CAAUJ,SAAUuB,W,GA9CVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b9df614.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt={`Monster_${props.monster.id}`} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n            <h1>\r\n                {\r\n                    props.monster.name\r\n                }\r\n            </h1>\r\n            <h2>\r\n                {\r\n                    props.monster.email\r\n                }\r\n            </h2>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from './card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(\r\n                    (monster) => {\r\n                      return <Card key={monster.id} monster={monster}></Card>;\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input type='search' placeholder={placeholder}\r\n            onChange={handleChange} className='search'\r\n        >\r\n        </input>\r\n    );\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/card-list/search/search-box.component';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      seachField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(\r\n      (users) => {\r\n        console.log(users);\r\n        this.setState({monsters: users && users.length ? users : []});\r\n      }\r\n    );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({seachField: e.target.value});\r\n  };\r\n\r\n  render() {\r\n    const { monsters, seachField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) => {\r\n      return monster.name.toLowerCase().includes(seachField.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <h1> Monsters Rollodex </h1>\r\n\r\n        <img src={logo} alt='React Logo' className='App-logo'></img>\r\n\r\n        <br></br>\r\n\r\n        <SearchBox placeholder='Search monsters.' handleChange={this.handleChange}>\r\n        </SearchBox>\r\n\r\n        <hr></hr>\r\n        <br></br>\r\n\r\n        <CardList monsters={filteredMonsters}>\r\n        </CardList>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}